{"ast":null,"code":"var sukiicat = {\n  name: \"sukiicat\",\n  photo: \"./sukiicat/photo.jpg\",\n  profileImage: \"./sukiicat/profile.jpg\"\n};\nvar albertbabycat = {\n  name: \"albertbabycat\",\n  photo: \"./albertbabycat/photo.jpg\",\n  profileImage: \"./albertbabycat/profile.jpg\"\n};\nvar smoothiethecat = {\n  name: \"smoothiethecat\",\n  photo: \"./smoothiethecat/photo.jpg\",\n  profileImage: \"./smoothiethecat/profile.jpg\"\n};\nvar realgrumpycat = {\n  name: \"realgrumpycat\",\n  photo: \"./realgrumpycat/photo.jpg\",\n  profileImage: \"./realgrumpycat/profile.jpg\"\n};\nvar cats = [sukiicat, albertbabycat, smoothiethecat, realgrumpycat];\nvar catsSearch = {\n  sukiicat: sukiicat,\n  albertbabycat: albertbabycat,\n  smoothiethecat: smoothiethecat,\n  realgrumpycat: realgrumpycat\n};\nexport var fetchCats = function fetchCats() {\n  return new Promise(function (resolve) {\n    setTimeout(function () {\n      resolve(cats);\n    }, 1000);\n  });\n};\nexport var fetchCatsError = function fetchCatsError() {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject({\n        status: 500,\n        message: \"Error in the server\"\n      });\n    }, 1000);\n  });\n};\nexport var searchCats = function searchCats(search) {\n  return new Promise(function (resolve) {\n    var responseTime = Math.random() * 3;\n    setTimeout(function () {\n      resolve([search ? catsSearch[search] : cats]);\n    }, responseTime);\n  });\n};","map":{"version":3,"sources":["/home/irodriguez/git/instacat/src/service/catsApi.js"],"names":["sukiicat","name","photo","profileImage","albertbabycat","smoothiethecat","realgrumpycat","cats","catsSearch","fetchCats","Promise","resolve","setTimeout","fetchCatsError","_","reject","status","message","searchCats","search","responseTime","Math","random"],"mappings":"AAAA,IAAMA,QAAQ,GAAG;AACfC,EAAAA,IAAI,EAAE,UADS;AAEfC,EAAAA,KAAK,EAAE,sBAFQ;AAGfC,EAAAA,YAAY,EAAE;AAHC,CAAjB;AAMA,IAAMC,aAAa,GAAG;AACpBH,EAAAA,IAAI,EAAE,eADc;AAEpBC,EAAAA,KAAK,EAAE,2BAFa;AAGpBC,EAAAA,YAAY,EAAE;AAHM,CAAtB;AAMA,IAAME,cAAc,GAAG;AACrBJ,EAAAA,IAAI,EAAE,gBADe;AAErBC,EAAAA,KAAK,EAAE,4BAFc;AAGrBC,EAAAA,YAAY,EAAE;AAHO,CAAvB;AAMA,IAAMG,aAAa,GAAG;AACpBL,EAAAA,IAAI,EAAE,eADc;AAEpBC,EAAAA,KAAK,EAAE,2BAFa;AAGpBC,EAAAA,YAAY,EAAE;AAHM,CAAtB;AAMA,IAAMI,IAAI,GAAG,CAACP,QAAD,EAAWI,aAAX,EAA0BC,cAA1B,EAA0CC,aAA1C,CAAb;AAEA,IAAME,UAAU,GAAG;AAAER,EAAAA,QAAQ,EAARA,QAAF;AAAYI,EAAAA,aAAa,EAAbA,aAAZ;AAA2BC,EAAAA,cAAc,EAAdA,cAA3B;AAA2CC,EAAAA,aAAa,EAAbA;AAA3C,CAAnB;AAEA,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY;AAAA,SACvB,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AACrBC,IAAAA,UAAU,CAAC,YAAM;AACfD,MAAAA,OAAO,CAACJ,IAAD,CAAP;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJD,CADuB;AAAA,CAAlB;AAOP,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAC5B,IAAIH,OAAJ,CAAY,UAACI,CAAD,EAAIC,MAAJ,EAAe;AACzBH,IAAAA,UAAU,CAAC,YAAM;AACfG,MAAAA,MAAM,CAAC;AAAEC,QAAAA,MAAM,EAAE,GAAV;AAAeC,QAAAA,OAAO,EAAE;AAAxB,OAAD,CAAN;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJD,CAD4B;AAAA,CAAvB;AAOP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,MAAM;AAAA,SAC9B,IAAIT,OAAJ,CAAY,UAAAC,OAAO,EAAI;AACrB,QAAMS,YAAY,GAAGC,IAAI,CAACC,MAAL,KAAgB,CAArC;AACAV,IAAAA,UAAU,CAAC,YAAM;AACfD,MAAAA,OAAO,CAAC,CAACQ,MAAM,GAAGX,UAAU,CAACW,MAAD,CAAb,GAAwBZ,IAA/B,CAAD,CAAP;AACD,KAFS,EAEPa,YAFO,CAAV;AAGD,GALD,CAD8B;AAAA,CAAzB","sourcesContent":["const sukiicat = {\n  name: \"sukiicat\",\n  photo: \"./sukiicat/photo.jpg\",\n  profileImage: \"./sukiicat/profile.jpg\"\n};\n\nconst albertbabycat = {\n  name: \"albertbabycat\",\n  photo: \"./albertbabycat/photo.jpg\",\n  profileImage: \"./albertbabycat/profile.jpg\"\n};\n\nconst smoothiethecat = {\n  name: \"smoothiethecat\",\n  photo: \"./smoothiethecat/photo.jpg\",\n  profileImage: \"./smoothiethecat/profile.jpg\"\n};\n\nconst realgrumpycat = {\n  name: \"realgrumpycat\",\n  photo: \"./realgrumpycat/photo.jpg\",\n  profileImage: \"./realgrumpycat/profile.jpg\"\n};\n\nconst cats = [sukiicat, albertbabycat, smoothiethecat, realgrumpycat];\n\nconst catsSearch = { sukiicat, albertbabycat, smoothiethecat, realgrumpycat };\n\nexport const fetchCats = () =>\n  new Promise(resolve => {\n    setTimeout(() => {\n      resolve(cats);\n    }, 1000);\n  });\n\nexport const fetchCatsError = () =>\n  new Promise((_, reject) => {\n    setTimeout(() => {\n      reject({ status: 500, message: \"Error in the server\" });\n    }, 1000);\n  });\n\nexport const searchCats = search =>\n  new Promise(resolve => {\n    const responseTime = Math.random() * 3;\n    setTimeout(() => {\n      resolve([search ? catsSearch[search] : cats]);\n    }, responseTime);\n  });\n"]},"metadata":{},"sourceType":"module"}