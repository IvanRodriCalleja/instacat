{"ast":null,"code":"import _objectSpread from \"/home/irodriguez/git/instacat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/irodriguez/git/instacat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/irodriguez/git/instacat/src/modules/NormalFetchRaceCondition.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { CatsSkeleton } from \"./shared/CatsSkeleton\";\nimport { CatsError } from \"./shared/CatsError\";\nimport { CatsList } from \"./shared/CatsList\";\nimport { Search } from \"./shared/Search\";\nimport { searchCats } from \"../service/catsApi\";\nexport var NormalFetchRaceCondition = function NormalFetchRaceCondition() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState({\n    data: null,\n    error: null,\n    isLoading: true\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      _useState4$ = _useState4[0],\n      data = _useState4$.data,\n      error = _useState4$.error,\n      isLoading = _useState4$.isLoading,\n      dispatch = _useState4[1];\n\n  useEffect(function () {\n    dispatch(function (state) {\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n    });\n    searchCats(search).then(function (data) {\n      return dispatch({\n        data: data,\n        error: null,\n        isLoading: false\n      });\n    }).catch(function (error) {\n      return dispatch({\n        data: null,\n        error: error,\n        isLoading: false\n      });\n    });\n  }, [search]);\n  console.log({\n    data: data,\n    error: error,\n    isLoading: isLoading\n  });\n  if (isLoading) return React.createElement(CatsSkeleton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  });\n  if (error) return React.createElement(CatsError, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  });\n  return React.createElement(React.Fragment, null, React.createElement(Search, {\n    search: search,\n    onSearch: setSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(CatsList, {\n    cats: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/home/irodriguez/git/instacat/src/modules/NormalFetchRaceCondition.js"],"names":["React","useState","useEffect","CatsSkeleton","CatsError","CatsList","Search","searchCats","NormalFetchRaceCondition","search","setSearch","data","error","isLoading","dispatch","state","then","catch","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AAAA,kBAChBP,QAAQ,CAAC,EAAD,CADQ;AAAA;AAAA,MACrCQ,MADqC;AAAA,MAC7BC,SAD6B;;AAAA,mBAGGT,QAAQ,CAAC;AACtDU,IAAAA,IAAI,EAAE,IADgD;AAEtDC,IAAAA,KAAK,EAAE,IAF+C;AAGtDC,IAAAA,SAAS,EAAE;AAH2C,GAAD,CAHX;AAAA;AAAA;AAAA,MAGnCF,IAHmC,eAGnCA,IAHmC;AAAA,MAG7BC,KAH6B,eAG7BA,KAH6B;AAAA,MAGtBC,SAHsB,eAGtBA,SAHsB;AAAA,MAGTC,QAHS;;AAS5CZ,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,QAAQ,CAAC,UAAAC,KAAK;AAAA,+BAAUA,KAAV;AAAiBF,QAAAA,SAAS,EAAE;AAA5B;AAAA,KAAN,CAAR;AACAN,IAAAA,UAAU,CAACE,MAAD,CAAV,CACGO,IADH,CACQ,UAAAL,IAAI;AAAA,aAAIG,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAJA,IAAF;AAAQC,QAAAA,KAAK,EAAE,IAAf;AAAqBC,QAAAA,SAAS,EAAE;AAAhC,OAAD,CAAZ;AAAA,KADZ,EAEGI,KAFH,CAES,UAAAL,KAAK;AAAA,aAAIE,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,KAAK,EAALA,KAAd;AAAqBC,QAAAA,SAAS,EAAE;AAAhC,OAAD,CAAZ;AAAA,KAFd;AAGD,GALQ,EAKN,CAACJ,MAAD,CALM,CAAT;AAMAS,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAER,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,KAAK,EAALA,KAAR;AAAeC,IAAAA,SAAS,EAATA;AAAf,GAAZ;AACA,MAAIA,SAAJ,EAAe,OAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACf,MAAID,KAAJ,EAAW,OAAO,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACX,SACE,0CACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEH,MAAhB;AAAwB,IAAA,QAAQ,EAAEC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAxBM","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { CatsSkeleton } from \"./shared/CatsSkeleton\";\nimport { CatsError } from \"./shared/CatsError\";\nimport { CatsList } from \"./shared/CatsList\";\nimport { Search } from \"./shared/Search\";\n\nimport { searchCats } from \"../service/catsApi\";\n\nexport const NormalFetchRaceCondition = () => {\n  const [search, setSearch] = useState(\"\");\n\n  const [{ data, error, isLoading }, dispatch] = useState({\n    data: null,\n    error: null,\n    isLoading: true\n  });\n\n  useEffect(() => {\n    dispatch(state => ({ ...state, isLoading: true }));\n    searchCats(search)\n      .then(data => dispatch({ data, error: null, isLoading: false }))\n      .catch(error => dispatch({ data: null, error, isLoading: false }));\n  }, [search]);\n  console.log({ data, error, isLoading });\n  if (isLoading) return <CatsSkeleton />;\n  if (error) return <CatsError error={error} />;\n  return (\n    <>\n      <Search search={search} onSearch={setSearch} />\n      <CatsList cats={data} />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}